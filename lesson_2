1) 
var a = 1, b = 1, c, d;
c = ++a; alert(c); // 2  - префиксный инкремент, а увеличилась на 1;
d = b++; alert(d); // 1 - выведено значение переменной без инкремента; 
c = (2+ ++a); alert(c); // 5 - 2 прибавляется к а, которая уже равна 2, плюс префиксный инкремент, т.е. а = 3;
d = (2+ b++); alert(d); // 4 - 2 прибавляется к b, которая уже инкрементирована после вывода на 3 строке. т.е. b = 1+1;
alert(a); // 3 - а была инкрементирована в 4 строке, и стала равна 3;
alert(b); // 3 - b была инкрементирована в 5 строке после вывода, т.е. 2+1;


2)
var a = 2;
var x = 1 + (a *= 2);

x будет равен 5
a умножаем на 2, затем сложение с 1


3)
let a = 7;
let b = 15;

if (a >= 0 && b >= 0) {
    let x;
    if (a > b) {
        x = a - b;
        alert(x);
    }else {
        x = b - a;
        alert(x);
    }
}

if (a < 0 && b < 0) {
	let y = a * b;
	alert(y);
}

if ((a >= 0 && b < 0) || (a < 0 && b >= 0)) {
	let z = a + b;
	alert(z);
}


4)
let a = 5;

switch(a) {
	case a < 5:
		break;
	case a = 5:
		alert("5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15")
		break;
	case a > 5:
		break;
}


5)
function sum (a, b) {
	let result = a + b;
	return result;
}
let result = sum(3, 6);
alert(result);


function subtraction (a, b) {
	let result;
	if (a > b) {
		result = a - b;
	} else if (a < b) {
		result = b - a;
	} else {
		result = 0;
	}
	return result;
}
result = subtraction(5, 9);
alert(result);


function mult (a, b) {
	let result = a * b;
	return result;
}
result = mult(10, 4);
alert(result);


function division (a, b) {
	let result;
	if (a > b) {
		result = a / b;
	} else if (a < b) {
		result = b / a;
	} else {
		result = 1;
	}
	return result;
}
result = division(10, 3);
alert(result);


6)

let arg1 = prompt("Введите число 1: ");
let arg2 = prompt("Введите число 2: ");
let operation = prompt("sum, mult, subtraction, division");


function mathOperation(arg1, arg2, operation) {

	let sum = arg1 + arg2;
	return sum;
	alert(sum);

	let subtraction;
	if (arg1 > arg2) {
		subtraction = arg1 - arg2;
	} else if (arg1 < arg2) {
		subtraction = arg2 - arg1;
	} else {
		subtraction = 0;
	}
	return subtraction;

	let mult = arg1 * arg2;
	return mult;

	let division;
	if (arg1 > arg2) {
		division = arg1 / arg2;
	} else if (arg1 < arg2) {
		division = arg2 / arg1;
	} else {
		division = 1;
	}
	return division;


	switch(operation) {
		case operation = "sum":
			alert(sum);
			break;
		case operation = "mult":
			alert(mult);
			break;
		case operation = "subtraction":
			alert(subtraction);
			break;
		case operation = "division":
			alert(division);
			break;
	}
}


7)
alert( null > 0 ); // false
alert( null == 0 ); // false
alert(null >= 0); // true

Aлгоритмы проверки равенства == и сравнения >= > < <= работают по-разному.
Сравнение честно приводит к числу, получается ноль. А при проверке равенства значения null и undefined обрабатываются особым образом: они равны друг другу, но не равны чему-то ещё.


8)
function power(val, pow) {
	if (pow != 1) {
		return val * power(val, pow - 1);
	} else {
		return val;
	}
}

let result = power(5, 7);
alert(result);
